/* https://leetcode.com/problems/contains-duplicate-iii/description/ */

class Solution {
    public boolean containsNearbyAlmostDuplicate(int[] nums, int indexDiff, int valueDiff) {
    //     for(int i=0;i<nums.length;i++){
    //         for(int j=i+1;j<nums.length;j++){
              
    //                 if(Math.abs((long) (nums[i]-nums[j]))<=valueDiff && j-i<=indexDiff){
    //                     return true;
    //                 }
                    
                
    //         }
    //     }
    //         return false;
    int i=0;
    int j=0;
    while(j<nums.length){
        int indiDiff=Math.abs(i-j);
        int valiDiff=Math.abs(nums[i]-nums[j]);
            if(i!=j && indiDiff<=indexDiff && valiDiff<=valueDiff){
                return true;
            }
            else if(indiDiff == indexDiff || j==nums.length-1){
                j=++i;

            }
            j++;
        
    }
        return false;
        
    }
}
