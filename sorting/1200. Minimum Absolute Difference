/* https://leetcode.com/problems/minimum-absolute-difference/ */

class Solution {
     public List<List<Integer>> minimumAbsDifference(int[] arr) {
   bubble(arr);
    List<List<Integer>> newarr=new ArrayList<>();
    int min=arr[1]-arr[0];
    for(int i=0;i<arr.length-1;i++){
        int diff=arr[i+1]-arr[i];
        if(diff<min){
            min=diff;
        }
    }
    for(int i=0;i< arr.length-1;i++){
        if(arr[i+1]-arr[i]==min){
            List<Integer> res=new ArrayList<>();
            res.add(arr[i]);
            res.add(arr[i+1]);
            newarr.add(res);
        }
    }
    return newarr;
    }
//    static void insertion(int[] arr){
//        for(int i=0;i<arr.length-1;i++){
//            for(int j=i+1;j>0;j--){
//                if(arr[j]<arr[j-1]){
//                    swap(arr,j,j-1);
//                }
//                else{
//                    break;
//                }
//            }
//        }
//    }
//    static void swap(int[] arr,int first,int second){
//        int temp=arr[first];
//        arr[first]=arr[second];
//        arr[second]=temp;
//    }
static void bubble(int[] arr) {
    boolean swapped;
    for (int i = 0; i < arr.length; i++) {
        swapped = false;
        for (int j = 1; j < arr.length - i; j++) {
            if (arr[j] < arr[j-1]) {
                // swap
                int temp = arr[j];
                arr[j] = arr[j-1];
                arr[j-1] = temp;
                swapped = true;
            }
        }
        if (!swapped) {
            break;
        }
    }
}
}
