/* https://leetcode.com/problems/maximum-product-of-three-numbers/ */

class Solution {
     public int maximumProduct(int[] nums) {
    insertion(nums);
   
    int max1=-1;
   
  
        if(nums[0]<0 && nums[1]<0){
          max1=nums[0]*nums[1]*nums[nums.length-1];
        }
        int max2=nums[nums.length-1]*nums[nums.length-2]*nums[nums.length-3];
       int maxprod=Math.max(max1,max2);

   
   return maxprod;
    }
    static void insertion(int[] arr){
    for(int i=0;i< arr.length-1;i++){
        for(int j=i+1;j>0;j--){
            if(arr[j]<arr[j-1]){
                swap(arr,j,j-1);
            }
            else{
                break;
            }
        }
    }
    }
    static void swap(int[] arr,int first,int second){
        int temp=arr[first];
        arr[first]=arr[second];
        arr[second]=temp;
    }
}
