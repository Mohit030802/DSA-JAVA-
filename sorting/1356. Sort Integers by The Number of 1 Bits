/* https://leetcode.com/problems/sort-integers-by-the-number-of-1-bits/ */

class Solution {
    public int[] sortByBits(int[] arr) {
        // insertion(arr);
        Arrays.sort(arr);
        bubbleBits(arr);
        
        return arr;
    }
    static int countBits(int num){
        int count=0;
        while(num>0){
            if(num%2==1){
                count++;
            }
            num=num/2;
        }
        return count;
    }
    // static void insertion(int[] arr){
    //     for(int i=0;i<arr.length-1;i++){
    //         for(int j=i+1;j>0;j--){
    //             if(arr[j]<arr[j-1]){
    //                 swap(arr,j,j-1);
    //             }
    //             else{
    //                 break;
    //             }
    //         }
    //     }
    // }
    
    static void bubbleBits(int[] arr){
for(int i=0;i<arr.length;i++){
            for(int j=1;j<arr.length-i;j++)
            if(countBits(arr[j])<countBits(arr[j-1])){
                swap(arr,j,j-1);
            }
        }
    }static void swap(int[] arr,int first,int second){
        int temp=arr[first];
        arr[first]=arr[second];
        arr[second]=temp;
    }
    
}
