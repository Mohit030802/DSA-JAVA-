/*  https://leetcode.com/problems/valid-triangle-number/description/ */

class Solution {
    public int triangleNumber(int[] nums) {
        // insertion(nums);
        Arrays.sort(nums);
       int count=0;
       int len=nums.length;

    
    //    for(int i=0;i<len-2;i++){
    //        for(int j=i+1;j<len-1;j++ ){
    //            for(int k=j+1;k<len;k++){
    //                if(nums[i]+nums[j]>nums[k] && nums[i]+nums[k]>nums[j] && nums[k]+nums[j]>nums[i]){
    //                    count++;
    //                }
    //            }
    //        }
    //    } 
    //        return count++;
    for(int i=len-1;i>=2;i--){
        int j=0,k=i-1;
        while(j<k){
            if(nums[j]+nums[k]>nums[i]){
                count+=k-j;
                k--;
            }
            else{

            j++;
            }
        }
    }
    return count;

    }
    static void insertion(int[] arr){
        for(int i=0;i<arr.length-1;i++){
            for(int j=i+1;j>0;j--){
                if(arr[j]<arr[j-1]){
                    swap(arr,j,j-1);
                }else{

                break;
                }
            }
        }
    }
    static void swap(int[] arr,int first,int second){
        int temp=arr[first];
        arr[first]=arr[second];
        arr[second]=temp;
    }
   
}
