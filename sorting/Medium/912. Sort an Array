/* https://leetcode.com/problems/sort-an-array/description/ */

class Solution {
    public int[] sortArray(int[] nums) {
        return mergeSort(nums);
    }
    static int[] mergeSort(int[] arr){
        if(arr.length==1){
            return arr;
        }
        int mid=arr.length/2;

        int[] left=mergeSort(Arrays.copyOfRange(arr,0,mid));
        int[] right=mergeSort(Arrays.copyOfRange(arr,mid,arr.length));
        return merge(left,right);

    }
    static int[] merge(int[] left,int[] right){
        int[] ress=new int[left.length+right.length];

        int i=0;
        int j=0;
        int k=0;

        while(i<left.length && j<right.length){
            if(left[i]<right[j]){
                ress[k]=left[i];
                i++;
            }
            else{
                ress[k]=right[j];
                j++;
            }
            k++;
            
        }
        while(i<left.length){
            ress[k]=left[i];
            i++;
            k++;
        }
        while(j<right.length){
            ress[k]=right[j];
            j++;
            k++;
        }
        return ress;
    }
}
